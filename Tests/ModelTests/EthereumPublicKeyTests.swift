import Foundation
import XCTest

@testable import Model

class EthereumPublicKeyTests: XCTestCase {

    func test_success_publickey_to_address() throws {
        let publicKey = EthereumPublicKey(rawBytes: [
            0x5f, 0xf2, 0xea, 0x6b, 0x8d, 0x33, 0x78, 0x56, 0x47, 0xda, 0xd5, 0x3f, 0xf3, 0x15, 0x48, 0xf8,
            0xd1, 0x73, 0x84, 0x5c, 0xab, 0xcc, 0xde, 0x40, 0xfe, 0x81, 0x0b, 0x9b, 0xc5, 0xfc, 0x20, 0x39,
            0x40, 0x35, 0xc7, 0x17, 0x3c, 0x95, 0xa3, 0x52, 0x57, 0x6d, 0xec, 0x31, 0x24, 0xa8, 0x3f, 0x65,
            0x81, 0xba, 0xe8, 0x50, 0xcf, 0x7d, 0x77, 0x0b, 0x12, 0xdf, 0x99, 0x5a, 0x32, 0x5b, 0x71, 0x06
        ])
        XCTAssertEqual(publicKey.address, "0xb741D4700f58b9eCA9279486F6dcfC894AfEdAA1")
    }

    func test_success_publickey_to_address_bytes() throws {
        let publicKey = EthereumPublicKey(rawBytes: [
            0x5f, 0xf2, 0xea, 0x6b, 0x8d, 0x33, 0x78, 0x56, 0x47, 0xda, 0xd5, 0x3f, 0xf3, 0x15, 0x48, 0xf8,
            0xd1, 0x73, 0x84, 0x5c, 0xab, 0xcc, 0xde, 0x40, 0xfe, 0x81, 0x0b, 0x9b, 0xc5, 0xfc, 0x20, 0x39,
            0x40, 0x35, 0xc7, 0x17, 0x3c, 0x95, 0xa3, 0x52, 0x57, 0x6d, 0xec, 0x31, 0x24, 0xa8, 0x3f, 0x65,
            0x81, 0xba, 0xe8, 0x50, 0xcf, 0x7d, 0x77, 0x0b, 0x12, 0xdf, 0x99, 0x5a, 0x32, 0x5b, 0x71, 0x06
        ])
        XCTAssertEqual(publicKey.addressBytes(), [183, 65, 212, 112, 15, 88, 185, 236, 169, 39, 148, 134, 246, 220, 252, 137, 74, 254, 218, 161])
    }

    func test_success_publickey_valid() throws {
        let publicKey = EthereumPublicKey(rawBytes: [
            0x5f, 0xf2, 0xea, 0x6b, 0x8d, 0x33, 0x78, 0x56, 0x47, 0xda, 0xd5, 0x3f, 0xf3, 0x15, 0x48, 0xf8,
            0xd1, 0x73, 0x84, 0x5c, 0xab, 0xcc, 0xde, 0x40, 0xfe, 0x81, 0x0b, 0x9b, 0xc5, 0xfc, 0x20, 0x39,
            0x40, 0x35, 0xc7, 0x17, 0x3c, 0x95, 0xa3, 0x52, 0x57, 0x6d, 0xec, 0x31, 0x24, 0xa8, 0x3f, 0x65,
            0x81, 0xba, 0xe8, 0x50, 0xcf, 0x7d, 0x77, 0x0b, 0x12, 0xdf, 0x99, 0x5a, 0x32, 0x5b, 0x71, 0x06
        ])
        XCTAssertTrue(publicKey.isValid())
    }

    func test_failure_publickey_valid() throws {
        let publicKey = EthereumPublicKey(rawBytes: [
            0x5f, 0xf2, 0xea, 0x6b, 0x8d, 0x33, 0x78, 0x56, 0x47, 0xda, 0xd5, 0x3f, 0xf3, 0x15, 0x48, 0xf8,
            0xd1, 0x73, 0x84, 0x5c, 0xab, 0xcc, 0xde, 0x40, 0xfe, 0x81, 0x0b, 0x9b, 0xc5, 0xfc, 0x20, 0x39,
            0x40, 0x35, 0xc7, 0x17, 0x3c, 0x95, 0xa3, 0x52, 0x57, 0x6d, 0xec, 0x31, 0x24, 0xa8, 0x3f, 0x65,
            0x81, 0xba, 0xe8, 0x50, 0xcf, 0x7d, 0x77, 0x0b, 0x12, 0xdf, 0x99, 0x5a, 0x32, 0x5b, 0x71
        ])
        XCTAssertFalse(publicKey.isValid())
    }
}
